Unknown Hashing — writeup (RU)
Уровень: Лёгкий

Задача
------
Дан архив с «неизвестным» хешем. Формулировка: «Этот хеш явно похож на алгоритм MD5, но это не он…». Нужно получить исходную строку и оформить флаг в формате CSC{...}.

Артефакты
---------
В архиве два файла:
- hash.py — реализация собственного «mystery_hash»
- hash.out — строка, напечатанная этим хешем: 
  ff3c0f4667f940c6fc7416f8aeb5f948

Разбор hash.py
--------------
Внутри `mystery_hash` используется классическая схема MD5:
- Инициализационные константы:
  A = 0x67452301
  B = 0xefcdab89
  C = 0x98badcfe
  D = 0x10325476
- Массивы сдвигов `s` и синусные константы `K` ровно как в MD5.
- Блоковая обработка по 512 бит, паддинг — стандартный.

НО в самом конце автор «портит» результат двумя простыми шагами над 16 байтами итогового дайджеста:
1) Переставляет байты по маске:
   mask = [3,1,7,5,9,11,13,15,14,12,10,8,6,4,2,0]
2) Делает XOR с маской-ключом (16 байт):
   mask2 = [AA,55,1A,C3,9F,5E,33,77,77,33,5E,9F,C3,1A,55,AA]

Т.е. фактически это «MD5 → перестановка → XOR → hex». Стандартный MD5 там есть, он просто замаскирован.

Инвертируем «маскировку»
------------------------
Нам дан только результат (`hash.out`). Чтобы вернуться к «чистому» MD5-дайджесту, делаем обратные действия:
- Сначала убираем XOR (снова XOR с тем же mask2)
- Затем восстанавливаем исходный порядок байтов (обратная перестановка)

Ниже минимальный скрипт (Python 3):

```python
out_hex = "ff3c0f4667f940c6fc7416f8aeb5f948"
mask  = [3,1,7,5,9,11,13,15,14,12,10,8,6,4,2,0]
mask2 = [0xAA,0x55,0x1A,0xC3,0x9F,0x5E,0x33,0x77,0x77,0x33,0x5E,0x9F,0xC3,0x1A,0x55,0xAA]

# 1) mixed = out ^ mask2
out_bytes = bytes.fromhex(out_hex)
mixed = bytes([out_bytes[i] ^ mask2[i] for i in range(16)])

# 2) восстановить исходные 16 байт MD5 (orig[mask[i]] = mixed[i])
orig = bytearray(16)
for i, m in enumerate(mask):
    orig[m] = mixed[i]

print(orig.hex())
```

Вывод:
```
e269ac55af856d1567f848a747738bb1
```

Это и есть «чистый» MD5-дайджест исходной строки.

Восстановление исходной строки
------------------------------
Дальше — обычный подбор по словарю (или просто проверка догадок). Этот хеш бьётся простым словарём (rockyou) или вручную:

Примеры проверок:
- Python: `hashlib.md5(b"hashim").hexdigest()` → `e269ac55af856d1567f848a747738bb1`
- hashcat:
  ```bash
  echo e269ac55af856d1567f848a747738bb1 > md5.txt
  hashcat -m 0 md5.txt /path/to/rockyou.txt --show
  ```

Совпадение: MD5("hashim") = e269ac55af856d1567f848a747738bb1.

Ответ
-----
Искомая строка: `hashim`  
Флаг: **CSC{hashim}**

Выводы
------
- Задача сводится к распознаванию MD5-ядра и удалению поверхностной обфускации (перестановка + XOR).
- Всегда проверяйте IV, таблицы `s` и `K` — это быстрый способ понять, что перед вами MD5 (или его модификация).
- После снятия обёртки остаётся обычный MD5-crack с любым удобным инструментом.
